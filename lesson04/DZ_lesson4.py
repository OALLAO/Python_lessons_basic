#EASY
# Все задачи текущего блока решите с помощью генераторов списков!

# Задание-1:
# Дан список, заполненный произвольными целыми числами.
# Получить новый список, элементы которого будут
# квадратами элементов исходного списка
# [1, 2, 4, 0] --> [1, 4, 16, 0]

nu_e = [el ** 2 for el in [1,2,4,0]]
print('square of numbers [1,2,4,0] = ', nu_e)

# Задание-2:
# Даны два списка фруктов.
# Получить список фруктов, присутствующих в обоих исходных списках.

fl1 = ['apple', 'qiwi', 'banana', 'pineapple', 'grape', 'lemon', 'peach']
fl2 = ['coconut', 'banana', 'strawberry', 'peach', 'pear', 'plum']
n_fl = [i for i in fl1 if i in fl2]
print(n_fl)

#through cycle for
for i in fl1:
    if i in fl2:
        print(i)

# Задание-3:
# Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# + Элемент кратен 3
# + Элемент положительный
# + Элемент не кратен 4

import random

print('список 1 из элементов исходного, удовлетворяющих следующим условиям:\n+ Элемент кратен 3\n+ Элемент положительный\n+ Элемент не кратен 4')
proiz_num = [i for i in [random.randint(-100,100) for _ in range(30)] if (i % 3 == 0 and i > 0 and i % 4 != 0)]
print(proiz_num)

print('\nсписок 2 из элементов исходного, удовлетворяющих следующим условиям через for:\n+ Элемент кратен 3\n+ Элемент положительный\n+ Элемент не кратен 4')
proiz_num2 = [random.randint(-100,100) for _ in range(30)]
#through cycle for
for i in proiz_num2:
    if (i % 3 ==0 and i > 0 and i % 4 != 0):
        print(i)

#NORMAL
# Задание-1:
# Напишите скрипт, заполняющий указанный файл (самостоятельно задайте имя файла)
# произвольными целыми цифрами, в результате в файле должно быть
# 2500-значное произвольное число.
# Найдите и выведите самую длинную последовательность одинаковых цифр
# в вышезаполненном файле.

import re

with open('file.txt', 'w') as file:
    for _ in range(2500):
        file.write(str(random.randint(0, 9)))

with open('file.txt', 'r') as file:
    long = list()
    big_file = file.read()
    print('random number = ',big_file)
    for n in range(0,10):
        if str(n) in big_file:
            find = re.findall('[%s]+' %n, big_file)
            long.append(max(find, key=len))
    result = max(long, key=len)
    print('the longest sequence = ', result)

# Задание-2
# Сформировать квадратную матрицу, в каждой строке которой находится ровно один ноль на случайном месте, остальные элементы тоже рандомные. Пользователь вводит размер

#HARD

# Задание-1
# Куб состоит из n^3 прозрачных и непрозрачных элементарных кубиков. Имеется ли хотя бы один просвет по каждому из трех измерений?
# Если это так, вывести координаты каждого просвета. Куб задается трехмерной матрицей из 0 и 1.


# Задание-2
# Дан pwd.txt с логинами и паролями. Найдите топ10 самых популярных паролей.
#

# Задание-3
# Пользователь вводит положительное целое число больше 1
# Нужно создать квадратную матрицу этого размера и по спирали заполнить её числами

# 5
#  1  2  3  4 5
# 16 17 18 19 6
# 15 24 25 20 7
# 14 23 22 21 8
# 13 12 11 10 9

# 3
# 1 2 3
# 8 9 4
# 7 6 5


n = int(input())
mat = [[0]*n for i in range(n)]
st = 1
m = 0

mat[n//2][n//2]=n*n
for v in range(n//2):
    #up, horizontal
    for i in range(n-m):
        mat[v][i+v] = st
        st+=1
    #right, vertical
    for i in range(v+1, n-v):
        mat[i][-v-1] = st
        st+=1
    #down, horizontal
    for i in range(v+1, n-v):
        mat[-v-1][-i-1] =st
        st+=1
    #left, vertical
    for i in range(v+1, n-(v+1)):
        mat[-i-1][v]=st
        st+=1
    m+=2
for i in mat:
    print(*i)